name: Deploy to Cloud Run (Terraform)

on:
  workflow_dispatch:
    inputs:
      image:
        description: 'Container image to deploy'
        required: true
        default: 'us-central1-docker.pkg.dev/logwise-devops-sandbox/fastapi-app-repo/fastapi-app:latest'
  workflow_run:
    workflows: ["Build & Push app image"]
    types:
      - completed

env:
  TF_DIR: terraform
  TF_WORKSPACE: sbx
  GCP_PROJECT_ID: logwise-devops-sandbox
  REGION: us-central1
  REPO_ID: fastapi-app-repo
  IMAGE_NAME: fastapi-app

jobs:
  deploy:
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      actions: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Auth to GCP via WIF
        uses: google-github-actions/auth@v3
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v3

      - name: Use workflow_dispatch image
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: echo "IMAGE=${{ github.event.inputs.image }}" >> $GITHUB_ENV
      
      - name: Compute image (no artifact)
        if: ${{ github.event_name == 'workflow_run' }}
        run: |
          REGION="${{ env.REGION }}"
          PROJECT="${{ env.GCP_PROJECT_ID }}"
          REPO="${{ env.REPO_ID }}"
          SERVICE="${{ env.IMAGE_NAME }}"
          echo "IMAGE=${REGION}-docker.pkg.dev/${PROJECT}/${REPO}/${SERVICE}:${{ github.event.workflow_run.head_sha }}" >> $GITHUB_ENV

      - name: Cache Terraform plugins
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.TF_DIR }}/.terraform
            ${{ env.TF_DIR }}/.terraform.lock.hcl
          key: tf-${{ runner.os }}-${{ hashFiles('**/.terraform.lock.hcl') }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.1

      - name: Terraform Init
        working-directory: ${{ env.TF_DIR }}
        run: ./trf ${{ env.TF_WORKSPACE }} init

      - name: Terraform Plan
        working-directory: ${{ env.TF_DIR }}
        env:
          TF_VAR_image:       ${{ env.IMAGE }}
        run: |
          ./trf ${{ env.TF_WORKSPACE }} plan

      - name: Terraform Apply
        working-directory: ${{ env.TF_DIR }}
        env:
          TF_VAR_image:       ${{ env.IMAGE }}
        run: ./trf ${{ env.TF_WORKSPACE }} apply -auto-approve

      - name: Cloud Run URL
        working-directory: ${{ env.TF_DIR }}
        run: ./trf ${{ env.TF_WORKSPACE }} output -raw cloud_run_url || true